% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cnn.R
\name{print.citoarchitecture}
\alias{print.citoarchitecture}
\title{Print method for citoarchitecture objects}
\usage{
\method{print}{citoarchitecture}(x, input_shape, output_shape = NULL, ...)
}
\arguments{
\item{x}{An object of class \code{citoarchitecture}, created by \code{\link{create_architecture}}.}

\item{input_shape}{A numeric vector specifying the dimensions of a single sample (e.g., \code{c(3, 28, 28)} for an RGB image with height and width of 28 pixels). This argument is required for a detailed output.}

\item{output_shape}{An integer specifying the number of nodes in the output layer. If \code{NULL}, no output layer is printed.}

\item{...}{Additional arguments (currently not used).}
}
\value{
The original \code{citoarchitecture} object, returned invisibly.
}
\description{
This method provides a visual representation of the network architecture defined by an object of class \code{citoarchitecture}, including information about each layer's configuration. It helps in understanding the structure of the architecture defined by \code{\link{create_architecture}}.
}
\examples{
\donttest{
if(torch::torch_is_installed()){
library(cito)

c1 <- conv(n_kernels = 8, kernel_size = 5)
c2 <- conv(n_kernels = 16, kernel_size = 3)
l <- linear(n_neurons = 100)
mP <- maxPool(kernel_size = 2)
architecture <- create_architecture(c1, c1, mP, c2, c2, mP, l,
                                    default_dropout = list(linear=0.6, conv=0.4),
                                    default_normalization = list(linear=TRUE),
                                    default_activation = "selu")

# See how the finished CNN would look like for specific input and output shapes
print(architecture, c(3,128,128), 10)
}
}

}
